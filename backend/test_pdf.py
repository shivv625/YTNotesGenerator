#!/usr/bin/env python3
"""
Test script to verify PDF generation functionality
"""

import sys
import os
from utils import generate_pdf

def test_pdf_generation():
    """Test PDF generation with sample content"""
    print("ЁЯУД Testing PDF generation...")
    
    # Sample notes content
    sample_notes = """## Overview/Summary
This is a sample educational video about Python programming.

## Key Concepts
- Variables and data types
- Control structures
- Functions and modules

## Detailed Explanations
Python is a high-level programming language known for its simplicity and readability.

## Practical Applications
- Web development
- Data analysis
- Automation scripts

## Key Takeaways
- Python is beginner-friendly
- Large ecosystem of libraries
- Great for rapid prototyping"""

    # Sample Hindi notes
    hindi_notes = """## рд╕рд╛рд░рд╛рдВрд╢/рдЕрд╡рд▓реЛрдХрди
рдпрд╣ рдкрд╛рдпрдерди рдкреНрд░реЛрдЧреНрд░рд╛рдорд┐рдВрдЧ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдПрдХ рдирдореВрдирд╛ рд╢реИрдХреНрд╖рд┐рдХ рд╡реАрдбрд┐рдпреЛ рд╣реИред

## рдореБрдЦреНрдп рдЕрд╡рдзрд╛рд░рдгрд╛рдПрдВ
- рд╡реЗрд░рд┐рдПрдмрд▓реНрд╕ рдФрд░ рдбреЗрдЯрд╛ рдЯрд╛рдЗрдкреНрд╕
- рдХрдВрдЯреНрд░реЛрд▓ рд╕реНрдЯреНрд░рдХреНрдЪрд░реНрд╕
- рдлрдВрдХреНрд╢рдВрд╕ рдФрд░ рдореЙрдбреНрдпреВрд▓реНрд╕

## рд╡рд┐рд╕реНрддреГрдд рд╡реНрдпрд╛рдЦреНрдпрд╛
рдкрд╛рдпрдерди рдПрдХ рдЙрдЪреНрдЪ-рд╕реНрддрд░реАрдп рдкреНрд░реЛрдЧреНрд░рд╛рдорд┐рдВрдЧ рднрд╛рд╖рд╛ рд╣реИ рдЬреЛ рдЕрдкрдиреА рд╕рд░рд▓рддрд╛ рдФрд░ рдкрдардиреАрдпрддрд╛ рдХреЗ рд▓рд┐рдП рдЬрд╛рдиреА рдЬрд╛рддреА рд╣реИред

## рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЕрдиреБрдкреНрд░рдпреЛрдЧ
- рд╡реЗрдм рдбреЗрд╡рд▓рдкрдореЗрдВрдЯ
- рдбреЗрдЯрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг
- рдСрдЯреЛрдореЗрд╢рди рд╕реНрдХреНрд░рд┐рдкреНрдЯреНрд╕

## рдореБрдЦреНрдп рд╕реАрдЦ
- рдкрд╛рдпрдерди рд╢реБрд░реБрдЖрддреА рдХреЗ рд▓рд┐рдП рдЕрдиреБрдХреВрд▓ рд╣реИ
- рд▓рд╛рдЗрдмреНрд░реЗрд░реАрдЬ рдХрд╛ рдмрдбрд╝рд╛ рдЗрдХреЛрд╕рд┐рд╕реНрдЯрдо
- рддреЗрдЬ рдкреНрд░реЛрдЯреЛрдЯрд╛рдЗрдкрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рдмреЗрд╣рддрд░реАрди"""

    try:
        # Test English PDF
        print("ЁЯУЭ Generating English PDF...")
        english_pdf_path = generate_pdf(
            sample_notes, 
            "Python Programming Tutorial", 
            "https://www.youtube.com/watch?v=example"
        )
        
        if os.path.exists(english_pdf_path):
            print(f"тЬЕ English PDF generated successfully: {english_pdf_path}")
            print(f"ЁЯУК File size: {os.path.getsize(english_pdf_path)} bytes")
        else:
            print("тЭМ English PDF file not found")
            return False
        
        # Test Hindi PDF
        print("\nЁЯУЭ Generating Hindi PDF...")
        hindi_pdf_path = generate_pdf(
            hindi_notes, 
            "рдкрд╛рдпрдерди рдкреНрд░реЛрдЧреНрд░рд╛рдорд┐рдВрдЧ рдЯреНрдпреВрдЯреЛрд░рд┐рдпрд▓", 
            "https://www.youtube.com/watch?v=example"
        )
        
        if os.path.exists(hindi_pdf_path):
            print(f"тЬЕ Hindi PDF generated successfully: {hindi_pdf_path}")
            print(f"ЁЯУК File size: {os.path.getsize(hindi_pdf_path)} bytes")
        else:
            print("тЭМ Hindi PDF file not found")
            return False
        
        # Clean up test files
        try:
            os.remove(english_pdf_path)
            os.remove(hindi_pdf_path)
            print("\nЁЯз╣ Test files cleaned up")
        except:
            pass
        
        return True
        
    except Exception as e:
        print(f"тЭМ PDF generation failed: {str(e)}")
        return False

def main():
    print("ЁЯЪА YouTube Notes Generator - PDF Test")
    print("=" * 50)
    
    success = test_pdf_generation()
    
    print("\n" + "=" * 50)
    if success:
        print("тЬЕ PDF generation test passed!")
        print("ЁЯОЙ Your PDF functionality is working correctly.")
    else:
        print("тЭМ PDF generation test failed.")
        print("ЁЯФз Check the error messages above for troubleshooting.")

if __name__ == "__main__":
    main() 